mvp <- read.csv("C:/workspace/R/data/MVP.csv")
mvp_1 <- mvp %>% na.omit() %>% filter(Year <= 2010) %>%
select(G, MP, PT, TRB, AST, STL, FG., X3P., FT.,MVP) %>% as.data.frame()
library(rpart)
library(caret)
library(e1071)
library(randomForest)
library(dplyr)
library(ggplot2)
library(rpart.plot)
library(dplyr)
library(caret)
library(e1071)
library(caret)
library(randomForest)
library(rpart)
library(rpart.plot)
mvp <- read.csv("C:/workspace/R/data/MVP.csv")
mvp_1 <- mvp %>% na.omit() %>% filter(Year <= 2010) %>%
select(G, MP, PT, TRB, AST, STL, FG., X3P., FT.,MVP) %>% as.data.frame()
mvp_2 <- mvp %>% na.omit() %>% filter(Year >= 2011) %>%
select(G, MP, PT, TRB, AST, STL, FG., X3P., FT.,MVP) %>% as.data.frame()
mvp_1$MVP <- as.factor(mvp_1$MVP)
mvp_2$MVP <- as.factor(mvp_2$MVP)
stat <- read.csv("C:/workspace/R/data/Seasons_Stats_Last.csv")
stat <- stat %>% filter(Year >= 2000) %>% na.omit() %>%
select(G, MP, PT, TRB, AST, STL, FG., X3P., FT.,MVP)
stat$MVP <- as.factor(stat$MVP)
stat_not_mvp <- stat %>% filter(MVP == 0)
set.seed(5000)
a <- stat_not_mvp[sample(nrow(stat_not_mvp), 310), ]
b <- stat_not_mvp[sample(nrow(stat_not_mvp), 100), ]
train_1 <- rbind(a, mvp_1)
test_1 <- rbind(b, mvp_2)
dtc <- rpart(MVP ~ . , train_1)
pred <- predict(dtc, test_1, type = 'class')
table(pred, test_1$MVP)
confusionMatrix(pred, test_1$MVP)
rpart.plot(dtc, type=4)
# 예측에 사용될 데이터 셋
st_2021 <- read.csv("C:/workspace/R/data/2021Player.csv") %>% na.omit()
st_2021 <- as.data.frame(st_2021)
# 디시젼트리로 2021 MVP 예측.
pred_dt_2021 <- predict(dtc, st_2021, type = 'class')
summary(pred_dt_2021)
rf <- randomForest(MVP ~ ., train_1, ntree = 300)
pred_rf <- predict(rf, test_1, type = 'class')
confusionMatrix(pred_rf, test_1$MVP)
importance(rf)                                         # 변수 중요도의 경우 sample에 따라 차이를 보임.
pred_rf_2021 <- predict(rf, st_2021, type = 'class')
summary(pred_rf_2021)
target_rf = pred_rf_2021[pred_rf_2021 == 1] %>% names()
target_rf
st_2021 %>% filter(rownames(st_2021) %in% target_rf) %>% select(Player)
###########################################################################################
# 서포트 벡터 머신
# SVM 모델 만들고 테스트
sv <- svm(MVP ~ ., train_1)
pred_sv <- predict(sv, test_1, type = 'class')
confusionMatrix(pred_sv, test_1$MVP)
# SVM 모델로 2021 mvp 예측
pred_sv_2021 <- predict(sv, st_2021, type = 'class')
summary(pred_sv_2021)
# SVM 모델이 예측한 선수 이름 출력.
target_sv <- pred_sv_2021[pred_sv_2021 == 1] %>% names()
st_2021 %>% filter(rownames(st_2021) %in% target_sv) %>% select(Player)
